/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventario;

import Formularios.MainForm;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import modelo.conexion;

/**
 *
 * @author Gerson Lopez
 */
public class HistorialEvento extends javax.swing.JFrame {

    DefaultTableModel model;
    DefaultTableModel model2;
    PreparedStatement ps;
    ResultSet rs;

    conexion cn = new conexion();
    java.sql.Connection con = cn.getConexion();

    /**
     * Creates new form HistorialEvento
     */
    public HistorialEvento() {
        initComponents();
        cargarTablaEleccion("Entradas");
        model = (DefaultTableModel) tabla1.getModel();
        model2 = (DefaultTableModel) tabla2.getModel();
        
        this.setLocationRelativeTo(null);
    }

    private void cargarTablaEleccion(String variable) {
        if (variable.equals("Entradas")) {
            mostrarEntradas();
        }else if (variable.equals("Salidas")){
            mostrarSalidas();
        }
    }

    private void mostrarSalidas(){
        Connection con = null;

        try {
            con = (Connection) cn.getConexion();
            ps = con.prepareStatement("call LlamarSalida;");
            rs = ps.executeQuery();
            model = (DefaultTableModel) this.tabla1.getModel();
            model.setRowCount(0);
            Object Datos[] = new Object[3];

            while (rs.next()) {
                for (int i = 0; i < 3; i++) {
                    Datos[i] = (rs.getObject(i + 1));

                    if (i == 2) {
                        model.addRow(Datos);
                    }
                }
            }
            con.close();
        } catch (Exception e) {

        }
    }
    
    
    private void mostrarEntradas() {
        Connection con = null;

        try {
            con = (Connection) cn.getConexion();
            ps = con.prepareStatement("call LlamarEntrada;");
            rs = ps.executeQuery();
            model = (DefaultTableModel) this.tabla1.getModel();
            model.setRowCount(0);
            Object Datos[] = new Object[3];

            while (rs.next()) {
                for (int i = 0; i < 3; i++) {
                    Datos[i] = (rs.getObject(i + 1));

                    if (i == 2) {
                        model.addRow(Datos);
                    }
                }
            }
            con.close();
        } catch (Exception e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        rbEntradas = new javax.swing.JRadioButton();
        rbSalidas = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Reporte", "Lugar Evento", "Fecha"
            }
        ));
        tabla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla1);
        if (tabla1.getColumnModel().getColumnCount() > 0) {
            tabla1.getColumnModel().getColumn(0).setMaxWidth(80);
            tabla1.getColumnModel().getColumn(2).setMinWidth(140);
            tabla1.getColumnModel().getColumn(2).setMaxWidth(150);
        }

        tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Articulo", "Artículo", "Cantidades"
            }
        ));
        jScrollPane2.setViewportView(tabla2);
        if (tabla2.getColumnModel().getColumnCount() > 0) {
            tabla2.getColumnModel().getColumn(0).setMaxWidth(80);
            tabla2.getColumnModel().getColumn(2).setMinWidth(140);
            tabla2.getColumnModel().getColumn(2).setMaxWidth(150);
        }

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 32)); // NOI18N
        jLabel2.setText("Historial entradas/salidas eventos");

        buttonGroup1.add(rbEntradas);
        rbEntradas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbEntradas.setSelected(true);
        rbEntradas.setText("Entradas");
        rbEntradas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbEntradasMouseClicked(evt);
            }
        });

        buttonGroup1.add(rbSalidas);
        rbSalidas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbSalidas.setText("Salidas");
        rbSalidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbSalidasMouseClicked(evt);
            }
        });

        jButton1.setText("Salir");

        jButton5.setText("Menú Principal");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Volver");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Seleccione para visualizar");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Entradas");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Detalle");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addGap(41, 41, 41)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(439, 439, 439)
                        .addComponent(rbEntradas)
                        .addGap(18, 18, 18)
                        .addComponent(rbSalidas))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(152, 152, 152)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5)
                                        .addGap(253, 253, 253)))))))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton5, jButton6});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbEntradas)
                    .addComponent(rbSalidas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton5, jButton6});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbEntradasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbEntradasMouseClicked
        // TODO add your handling code here:
        cargarTablaEleccion("Entradas");
    }//GEN-LAST:event_rbEntradasMouseClicked

    private void tabla1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla1MouseClicked
        // TODO add your handling code here:
        int idReporte = Integer.parseInt(String.valueOf(model.getValueAt(tabla1.getSelectedRow(), 0)));
        if (rbEntradas.isSelected()){
            llenarArticulosEntrada(idReporte);
        }else {
            llenarArticulosSalida(idReporte);
        }
    }//GEN-LAST:event_tabla1MouseClicked

    private void rbSalidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbSalidasMouseClicked
        // TODO add your handling code here:
        cargarTablaEleccion("Salidas");
    }//GEN-LAST:event_rbSalidasMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        MenuInventario abrir = new MenuInventario();
        abrir.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        MainForm abrir = new MainForm();
        abrir.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void llenarArticulosSalida(int recibe){
        Connection con = null;

        try {
            con = (Connection) cn.getConexion();
            ps = con.prepareStatement("call LlenarProductosSalida("+ recibe +");");
            rs = ps.executeQuery();
            model2 = (DefaultTableModel) this.tabla2.getModel();
            model2.setRowCount(0);
            Object Datos[] = new Object[3];

            while (rs.next()) {
                for (int i = 0; i < 3; i++) {
                    Datos[i] = (rs.getObject(i + 1));

                    if (i == 2) {
                        model2.addRow(Datos);
                    }
                }
            }
            con.close();
        } catch (Exception e) {

        }
    }
    
    
    private void llenarArticulosEntrada(int recibe) {
        Connection con = null;

        try {
            con = (Connection) cn.getConexion();
            ps = con.prepareStatement("call LlenarProductosEntrada("+ recibe +");");
            rs = ps.executeQuery();
            model2 = (DefaultTableModel) this.tabla2.getModel();
            model2.setRowCount(0);
            Object Datos[] = new Object[3];

            while (rs.next()) {
                for (int i = 0; i < 3; i++) {
                    Datos[i] = (rs.getObject(i + 1));

                    if (i == 2) {
                        model2.addRow(Datos);
                    }
                }
            }
            con.close();
        } catch (Exception e) {

        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HistorialEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HistorialEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HistorialEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HistorialEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HistorialEvento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbEntradas;
    private javax.swing.JRadioButton rbSalidas;
    private javax.swing.JTable tabla1;
    private javax.swing.JTable tabla2;
    // End of variables declaration//GEN-END:variables
}
